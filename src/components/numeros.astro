---
const { h, p } = Astro.props;
---
<div class="col-span-1 text-center  sm:text-2xl ">
    <h2 class="text-5xl sm:text-7xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-red-950 via-red-700 to-red-400">
        <span class="counter" data-target={h}>0</span>
    </h2>
    <p class="sm:mt-3 ">{p}</p>
</div>

<script type="module">
  const counters = document.querySelectorAll('.counter');
  const observer = new IntersectionObserver((entries, obs) => {
    entries.forEach(entry => {
      if (!entry.isIntersecting) return;
      const counter = entry.target;
      const target = +counter.getAttribute('data-target');
      const duration = 1000; // duraciÃ³n en ms
      let startTimestamp = null;
      const step = (timestamp) => {
        if (!startTimestamp) startTimestamp = timestamp;
        const progress = Math.min((timestamp - startTimestamp) / duration, 1);
        counter.innerText = Math.floor(progress * target);
        if (progress < 1) {
          requestAnimationFrame(step);
        } else {
          counter.innerText = target;
        }
      };
      requestAnimationFrame(step);
      obs.unobserve(counter);
    });
  }, { threshold: 0.1 });
  counters.forEach(counter => observer.observe(counter));
</script>